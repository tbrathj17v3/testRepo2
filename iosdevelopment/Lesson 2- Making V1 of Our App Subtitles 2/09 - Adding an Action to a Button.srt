0:00:00.325,0:00:03.420
Okay, so thus far, we have a button with an image of a microphone.

0:00:03.420,0:00:06.140
But when I click on it, nothing happens.

0:00:06.140,0:00:07.800
So let's change that.

0:00:07.800,0:00:11.180
Notice that we are currently in the standard editor.

0:00:11.180,0:00:12.760
How do I know that, you ask?

0:00:12.760,0:00:17.610
Well, because this button, which is labeled Standard editor, is selected.

0:00:17.610,0:00:21.360
The button right next to it is called the Assistant editor.

0:00:21.360,0:00:26.130
If I click on it, Xcode continues to show me the storyboard, but in addition to

0:00:26.130,0:00:30.420
that, it shows me another file which is logically related to the storyboard.

0:00:30.420,0:00:33.910
This file is called ViewController.swift.

0:00:33.910,0:00:36.969
Let me slide out the Navigator so we can see this a little bit better.

0:00:38.260,0:00:39.300
There.

0:00:39.300,0:00:44.330
Now, the way these two are related is that when we click on the record button,

0:00:44.330,0:00:46.260
some code will get executed.

0:00:46.260,0:00:50.480
And that code will go right here in the ViewController.swift.

0:00:50.480,0:00:51.455
By the way, this file,

0:00:51.455,0:00:56.680
ViewController.swift, was created by Xcode when we made our project.

0:00:56.680,0:01:01.380
Now, I can almost hear some of you say, how are these two files related?

0:01:01.380,0:01:02.440
Here's how.

0:01:02.440,0:01:05.860
Let me select this phone frame in the storyboard such that there is

0:01:05.860,0:01:07.640
a blue outline around it.

0:01:07.640,0:01:10.860
And now, if I slide out the utility area and

0:01:10.860,0:01:15.910
then click on this little icon right here, which is labeled Identity Inspector,

0:01:15.910,0:01:21.870
I can see that this frame is connected to a class called ViewController.

0:01:21.870,0:01:27.280
By the way, all of this work was done by Xcode where we actually made our app.

0:01:27.280,0:01:30.130
Okay, let me slide out the utility area for a bit.

0:01:31.300,0:01:36.170
All right, let's scan the code inside this file, ViewController.swift.

0:01:36.170,0:01:39.710
Now, it's okay if you do not understand everything in this file.

0:01:39.710,0:01:43.070
For now, I just want to highlight that the name of this file

0:01:43.070,0:01:45.750
is the exact same as the name of the class inside the file.

0:01:46.810,0:01:52.840
And this class has two functions, viewDidLoad and didReceiveMemoryWarning.

0:01:52.840,0:01:56.000
Now, these are functions that allow us to manage or

0:01:56.000,0:01:58.300
control certain events with the app.

0:01:58.300,0:02:01.720
For instance, if we wanted our app to do something special in case our

0:02:01.720,0:02:05.210
app received a memory warning, that code would go right in here.

0:02:06.280,0:02:07.070
All right.

0:02:07.070,0:02:10.340
Now I'm going to write code that will execute when we hit this button.

0:02:11.680,0:02:17.010
I will press and hold Control down on my keyboard, click on the button, and

0:02:17.010,0:02:19.040
then drag towards my code.

0:02:19.040,0:02:20.420
And once I'm there, I'll let go.

0:02:21.980,0:02:24.670
You will be presented with a pop-up that will try and

0:02:24.670,0:02:28.200
make a connection between the storyboard and this code.

0:02:28.200,0:02:32.090
And because we are trying to do something when we click on this button,

0:02:32.090,0:02:34.430
the type of this connection is Action.

0:02:35.710,0:02:38.795
Let's call the name of this connection recordAudio.

0:02:40.000,0:02:43.200
The type of the button is UIButton.

0:02:43.200,0:02:46.000
UI stands for user interface.

0:02:46.000,0:02:49.440
Under Event, I will select Touch Up Inside.

0:02:49.440,0:02:52.540
What that means is that this event will be triggered when my

0:02:52.540,0:02:56.842
finger is within the bounds of the button, and then I'll hit Connect.

0:02:56.842,0:03:01.500
All right, I now have a skeleton function which will be called when I

0:03:01.500,0:03:03.110
hit the record button.

0:03:03.110,0:03:04.810
Let's examine this function.

0:03:04.810,0:03:08.330
Its name is recordAudio, which seems about right.

0:03:08.330,0:03:10.870
Also, the center of this action, or

0:03:10.870,0:03:15.920
the thing that actually triggers this function, is our UI button.

0:03:15.920,0:03:20.380
We also see something new, something called IBAction.

0:03:20.380,0:03:23.210
IB stands for interface builder, and

0:03:23.210,0:03:27.150
this thing tells developers that this is not an ordinary function, but

0:03:27.150,0:03:31.610
is instead linked to the storyboard or the interface builder somehow.

0:03:31.610,0:03:34.479
Okay, so I want to do two things when this function is called.

0:03:35.550,0:03:42.370
The first is that I want to show some text that says, recording in progress.

0:03:42.370,0:03:47.560
And then the other thing I want to do is actually record the user's voice.

0:03:47.560,0:03:50.900
By the way, when you start to add TODOs in this way,

0:03:50.900,0:03:55.170
they start to show up really clearly in this drop-down at the top.

0:03:55.170,0:03:58.270
This way, you can easily keep track of the things you need to do.

0:03:58.270,0:04:01.830
For now, I'm going to add a print statement to this function and

0:04:01.830,0:04:05.410
see if this function is in fact executed when I click on this button.

0:04:06.540,0:04:08.220
I'm going to run this project.

0:04:08.220,0:04:11.600
Now when I click on the button, I will see the output of

0:04:11.600,0:04:14.850
the print statement in the debug area at the bottom of Xcode.

0:04:14.850,0:04:16.290
Let me do that one more time.

0:04:16.290,0:04:17.510
There it is.

0:04:17.510,0:04:22.460
All right, I'm going to go back to my Xcode, slide out the debug area from here,

0:04:24.220,0:04:28.100
and the next thing I'm going to do is show some text that reads,

0:04:28.100,0:04:29.280
recording in progress.
